// Placeholder to allow defining custom styles that override everything else.
// (Use `_sass/minima/custom-variables.scss` to override variable defaults)

.tag {
    display: inline-block;
    *display: inline; /* for older IE */
    *zoom: 1; /* for older IE */
    height: 1em;
}

.back-to-top {
    padding-top: 0.3em;
    padding-bottom: 0.3em;
    padding-left: 0.5em;
    padding-right: 0.5em;
    display: block; 
    clear: both; 
    text-transform: uppercase; 
    text-align: right; 
    position: fixed; 
    bottom: 5%; 
    right: 10%; 
    background-color: rgba(255,255,255,0.8);
}

/**
 * Basic styling
 */
body {
    font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;
    color: $text-color;
    // background-color: $background-color;
    -webkit-text-size-adjust: 100%;
    -webkit-font-feature-settings: "kern" 1;
        -moz-font-feature-settings: "kern" 1;
        -o-font-feature-settings: "kern" 1;
            font-feature-settings: "kern" 1;
    font-kerning: normal;
    display: flex;
    min-height: 100vh;
    flex-direction: column;
    overflow-wrap: break-word;

    /* Set background */
    background-image: url("/images/background.png");
    background-color: rgba(255,255,255,0.8);
    background-blend-mode: color;

    /* Full height */
    height: 100%; 

    /* Center and scale the image nicely */
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: cover;
}

.bg {
    /* The image used */
    background-image: url("/images/background.png");

    /* Full height */
    height: 100%; 

    /* Center and scale the image nicely */
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: cover;
}

/**
* Wrapper
*/
.wrapper_header_footer {
    max-width: calc(#{$content-width} - (#{$spacing-unit}));
    margin-right: auto;
    margin-left: auto;
    padding-right: $spacing-unit * .5;
    padding-left: $spacing-unit * .5;
    @extend %clearfix;

    @media screen and (min-width: $on-large) {
        max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));
        padding-right: $spacing-unit;
        padding-left: $spacing-unit;
    }
}

// For wide pages, background color is handled by page-content-wide-page in _layout.scss
.wrapper-wide {
    flex: 1;
    max-width: calc(#{$content-width} - (#{$spacing-unit}));
    margin-right: auto;
    margin-left: auto;
    padding-right: $spacing-unit * .5;
    padding-left: $spacing-unit * .5;
    padding-top: $spacing-unit;
    padding-bottom: $spacing-unit;

    @extend %clearfix;

    @media screen and (min-width: $on-large) {
        flex: 1;
        max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));
        padding-right: $spacing-unit * 5;
        padding-left: $spacing-unit * 5;
        padding-top: $spacing-unit;
        padding-bottom: $spacing-unit;
    }
}

// For narrow pages, background color is handled here
.wrapper-narrow {
    flex: 1;
    max-width: calc(#{$content-width} - (#{$spacing-unit}));
    margin-right: auto;
    margin-left: auto;
    padding-right: $spacing-unit * .5;
    padding-left: $spacing-unit * .5;
    padding-top: $spacing-unit;
    padding-bottom: $spacing-unit;

    @extend %clearfix;

    @media screen and (min-width: $on-large) {
        flex: 1;
        max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));
        padding-right: $spacing-unit * 5;
        padding-left: $spacing-unit * 5;
        padding-top: $spacing-unit;
        padding-bottom: $spacing-unit;
    }
    background-color: rgba(255,255,255,0.87);
}


.page-content-wide-page {
    flex: 1 0 auto;
    background-color: rgba(255,255,255,0.8);
}

// For narrow pages, background color is handled by wrapper-narrow in _base.scss
.page-content-narrow-page {
    flex: 1 0 auto;
}
# Praat script Create Speech Stimulus Onset Asynchrony (SOA) Stimuli using Textgrids
# inspired by script by Daniel Hirst and Zhenghan Qi
# created by Yiling Huo
# 12 Aug 2022

# What this script does:
#   load sound file
#   load textgrid file
#   extract every non-empty interval as separate sound object
#   calculate how much silence is needed and create silent sound object
#     or speed up the sound if sound is longer than SOA, making sure there is at least some silence at the end
#     there is also an option to not slow down the longer sound but simply put the minimum silence at the end
#   concatenate everything into a new sound and save sound file
#   create a txt file containing the begin time and end time of each interval of the new stimuli
# Note: a 10ms silence will be created at the beginning of each sound file.

# Requirements:
# 1. .wav files and .TextGrid files should be in the same folder
# 2. Textgrid requirements:
#    a. each stimulus within a sound file must be indicated by an interval with a unique name
#    b. if working with speech material and need punctuation, all punctuation intervals should be named the same

################

# create form (UI window to set parameters)
form Make auditory serial presentation stimuli
comment The Generals:
text file_directory C:\my input directory
text save_directory C:\my output directory
sentence txt_file_name key.txt
sentence new_sound_file_name_ending 
comment The Specifics:
real critical_tier_number 1
real soa_in_seconds 0.8
boolean stretch_fragments 0
boolean allow_overtime 0
real minimum_silence_duration_seconds 0.03
sentence punctuation_name p
real punctuation_duration 0.3
endform

# create the output txt file
createFolder: save_directory$
txt_output$ = save_directory$ + "\" + txt_file_name$
writeFileLine: txt_output$, "filename", " ", "n", " ", "interval_name", " ", "on", " ", "off"

# get the list of wav files in the directory
Create Strings as file list... list 'file_directory$'\*.wav
numberOfFiles = Get number of strings

# define a variable that limits how long one sound can be, based on SOA and minimum silence duration
maxtime = soa_in_seconds - minimum_silence_duration_seconds

# loop through the files
for ifile from 1 to numberOfFiles
   Create Strings as file list... list 'file_directory$'\*.wav
   select Strings list
   fileName$ = Get string... ifile
   textgridName$ = fileName$ - ".wav" + ".TextGrid"
   mySound = Read from file... 'file_directory$'\'fileName$'
   samplingFrequency = Get sampling frequency
   myText = Read from file... 'file_directory$'\'textgridName$'
   select mySound
   plus myText
   Extract non-empty intervals... critical_tier_number no
   select myText
   intervalnumber = Count intervals where... critical_tier_number "is not equal to" ""

   newFileName$ = fileName$ - ".wav" + new_sound_file_name_ending$ + ".wav"

   # find the first named interval
   i = 0
   name$ = ""
   repeat
      i = i+1
      select myText
      name$ = Get label of interval... critical_tier_number i
   until name$ <> ""

   # make the first segment
   x = 1
   select myText
   name$ = Get label of interval... critical_tier_number i
   if name$ = punctuation_name$
      allSound = Create Sound from formula... silence 1 0 punctuation_duration samplingFrequency 0
      segmentDuration = Get total duration
      appendFileLine: txt_output$, newFileName$, " ", x, " ", name$, " ", 0, " ", segmentDuration
   else
      intervalname$ = "Sound " + name$
      select 'intervalname$'
      soundDuration = Get total duration
      if soundDuration < maxtime
         if stretch_fragments = 0
            silenceDuration = soa_in_seconds - soundDuration
            mySilence = Create Sound from formula... silence 1 0 silenceDuration samplingFrequency 0
            select 'intervalname$'
            plus mySilence
            allSound = Concatenate
            segmentDuration = Get total duration
            appendFileLine: txt_output$, newFileName$, " ", x, " ", name$, " ", 0, " ", segmentDuration
         else
            select 'intervalname$'
            rate = maxtime/soundDuration
            To Manipulation... 0.01 50 1000
            Create DurationTier: "shorten", 0, soundDuration
            Add point: 0, rate
            manipulationName$ = "Manipulation " + name$
            plus 'manipulationName$'
            Replace duration tier
            select 'manipulationName$'
            myNewSpeech = Get resynthesis (overlap-add)
            newDuration = Get total duration
            silenceDuration = soa_in_seconds - newDuration
            mySilence = Create Sound from formula... silence 1 0 silenceDuration samplingFrequency 0
            select 'intervalname$'
            plus mySilence
            allSound = Concatenate
            segmentDuration = Get total duration
            appendFileLine: txt_output$, newFileName$, " ", x, " ", name$, " ", 0, " ", segmentDuration
         endif
      else
         if allow_overtime = 1
            mySilence = Create Sound from formula... silence 1 0 minimum_silence_duration_seconds samplingFrequency 0
            select 'intervalname$'
            plus mySilence
            allSound = Concatenate
            segmentDuration = Get total duration
            appendFileLine: txt_output$, newFileName$, " ", x, " ", name$, " ", 0, " ", segmentDuration
         else
            select 'intervalname$'
            rate = maxtime/soundDuration
            To Manipulation... 0.01 50 1000
            Create DurationTier: "shorten", 0, soundDuration
            Add point: 0, rate
            manipulationName$ = "Manipulation " + name$
            plus 'manipulationName$'
            Replace duration tier
            select 'manipulationName$'
            myNewSpeech = Get resynthesis (overlap-add)
            newDuration = Get total duration
            silenceDuration = soa_in_seconds - newDuration
            mySilence = Create Sound from formula... silence 1 0 silenceDuration samplingFrequency 0
            select 'intervalname$'
            plus mySilence
            allSound = Concatenate
            segmentDuration = Get total duration
            appendFileLine: txt_output$, newFileName$, " ", x, " ", name$, " ", 0, " ", segmentDuration
         endif
      endif
   endif

   i = i+1
   
   # for loop to add appropriate silence and attach to the end of allSound for the rest of the intervals
   for n from i to intervalnumber
      select myText
      name$ = Get label of interval... critical_tier_number n
      if name$ = ""
      elsif name$ = punctuation_name$
         myPunctuation = Create Sound from formula... silence 1 0 punctuation_duration samplingFrequency 0
         select allSound
         plus myPunctuation
         allSound = Concatenate
         x = x+1
         preDuration = segmentDuration
         segmentDuration = Get total duration
         appendFileLine: txt_output$, newFileName$, " ", x, " ", name$, " ", preDuration, " ", segmentDuration
      else
         intervalname$ = "Sound " + name$
         select 'intervalname$'
         soundDuration = Get total duration
         if soundDuration < maxtime
            if stretch_fragments = 0
               silenceDuration = soa_in_seconds - soundDuration
               mySilence = Create Sound from formula... silence 1 0 silenceDuration samplingFrequency 0
               select 'intervalname$'
               plus mySilence
               myNewSound = Concatenate
               select allSound
               plus myNewSound
               allSound = Concatenate
               x = x+1
               preDuration = segmentDuration
               segmentDuration = Get total duration
               appendFileLine: txt_output$, newFileName$, " ", x, " ", name$, " ", preDuration, " ", segmentDuration
            else
               select 'intervalname$'
               rate = maxtime/soundDuration
               To Manipulation... 0.01 50 1000
               Create DurationTier: "shorten", 0, soundDuration
               Add point: 0, rate
               manipulationName$ = "Manipulation " + name$
               plus 'manipulationName$'
               Replace duration tier
               select 'manipulationName$'
               myNewSpeech = Get resynthesis (overlap-add)
               newDuration = Get total duration
               silenceDuration = soa_in_seconds - newDuration
               mySilence = Create Sound from formula... silence 1 0 silenceDuration samplingFrequency 0
               select 'intervalname$'
               plus mySilence
               myNewSound = Concatenate
               select allSound
               plus myNewSound
               allSound = Concatenate
               x = x+1
               preDuration = segmentDuration
               segmentDuration = Get total duration
               appendFileLine: txt_output$, newFileName$, " ", x, " ", name$, " ", preDuration, " ", segmentDuration
            endif
         else
            if allow_overtime = 1
               mySilence = Create Sound from formula... silence 1 0 minimum_silence_duration_seconds samplingFrequency 0
               select 'intervalname$'
               plus mySilence
               myNewSound = Concatenate
               select allSound
               plus myNewSound
               allSound = Concatenate
               x = x+1
               preDuration = segmentDuration
               segmentDuration = Get total duration
               appendFileLine: txt_output$, newFileName$, " ", x, " ", name$, " ", preDuration, " ", segmentDuration
            else
               select 'intervalname$'
               rate = maxtime/soundDuration
               To Manipulation... 0.01 50 1000
               Create DurationTier: "shorten", 0, soundDuration
               Add point: 0, rate
               manipulationName$ = "Manipulation " + name$
               plus 'manipulationName$'
               Replace duration tier
               select 'manipulationName$'
               myNewSpeech = Get resynthesis (overlap-add)
               newDuration = Get total duration
               silenceDuration = soa_in_seconds - newDuration
               mySilence = Create Sound from formula... silence 1 0 silenceDuration samplingFrequency 0
               select 'intervalname$'
               plus mySilence
               myNewSound = Concatenate
               select allSound
               plus myNewSound
               allSound = Concatenate
               x = x+1
               preDuration = segmentDuration
               segmentDuration = Get total duration
               appendFileLine: txt_output$, newFileName$, " ", x, " ", name$, " ", preDuration, " ", segmentDuration
            endif
         endif
      endif
   endfor
   
   select allSound
   Write to WAV file... 'save_directory$'\'newFileName$'
   select all
   Remove
endfor
